{"ast":null,"code":"import _objectSpread from \"/Users/trinadhkoya/WebstormProjects/huddle-home-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/trinadhkoya/WebstormProjects/huddle-home-assignment/src/components/Post.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport Divider from 'material-ui/Divider';\nimport Paper from 'material-ui/Paper';\nimport { getFullYear } from '../helpers/utilities';\nimport { height as headerHeight } from './Header';\nconst footerHeight = 50;\nconst contentStyle = {\n  minHeight: `calc(100vh - ${headerHeight + footerHeight}px)`\n};\nconst paperStyle = {\n  padding: 16\n};\nexport default class Post extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this._renderProgress = () => {\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, paperStyle, {\n          textAlign: 'center'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(CircularProgress, {\n        size: 80,\n        thickness: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    };\n\n    this._renderPost = () => {\n      const _this$props$post = this.props.post,\n            title = _this$props$post.title,\n            date = _this$props$post.date,\n            content = _this$props$post.content;\n      return React.createElement(Paper, {\n        zDepth: 0,\n        style: paperStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, title), React.createElement(\"time\", {\n        dateTime: date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, moment(date).fromNow()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), content && content.split('\\n').map((paragraph, index) => React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, paragraph))));\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchPost = _this$props.fetchPost,\n          id = _this$props.id,\n          post = _this$props.post,\n          slug = _this$props.slug;\n\n    if (!post) {\n      fetchPost(id, slug);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: contentStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.post ? this._renderPost() : this._renderProgress()), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      zDepth: 0,\n      style: paperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Copyright \", getFullYear(), \" Acme Corp.\")));\n  }\n\n}\nPost.propTypes = {\n  fetchPost: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  post: PropTypes.shape({\n    content: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    title: PropTypes.string\n  }),\n  slug: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/trinadhkoya/WebstormProjects/huddle-home-assignment/src/components/Post.js"],"names":["React","PureComponent","PropTypes","moment","CircularProgress","Divider","Paper","getFullYear","height","headerHeight","footerHeight","contentStyle","minHeight","paperStyle","padding","Post","_renderProgress","textAlign","_renderPost","props","post","title","date","content","fromNow","split","map","paragraph","index","componentDidMount","fetchPost","id","slug","render","propTypes","func","isRequired","string","shape","instanceOf","Date"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport Divider from 'material-ui/Divider';\nimport Paper from 'material-ui/Paper';\nimport { getFullYear } from '../helpers/utilities';\nimport { height as headerHeight } from './Header';\n\nconst footerHeight = 50;\nconst contentStyle = {\n    minHeight: `calc(100vh - ${headerHeight + footerHeight}px)`,\n};\nconst paperStyle = { padding: 16 };\n\nexport default class Post extends PureComponent {\n    static propTypes = {\n        fetchPost: PropTypes.func.isRequired,\n        id: PropTypes.string.isRequired,\n        post: PropTypes.shape({\n            content: PropTypes.string,\n            date: PropTypes.instanceOf(Date),\n            title: PropTypes.string,\n        }),\n        slug: PropTypes.string.isRequired,\n    };\n\n    componentDidMount() {\n        const { fetchPost, id, post, slug } = this.props;\n        if (!post) {\n            fetchPost(id, slug);\n        }\n    }\n\n    _renderProgress = () => {\n        return (\n            <div style={{ ...paperStyle, textAlign: 'center' }}>\n                <br />\n                <CircularProgress size={80} thickness={6} />\n            </div>\n        );\n    };\n\n    _renderPost = () => {\n        const { title, date, content } = this.props.post;\n        return (\n            <Paper zDepth={0} style={paperStyle}>\n                <article>\n                    <h1>{title}</h1>\n                    <time dateTime={date}>{moment(date).fromNow()}</time>\n                    <br />\n                    <br />\n                    <Divider />\n                    {content &&\n                    content\n                        .split('\\n')\n                        .map((paragraph, index) => <p key={index}>{paragraph}</p>)}\n                </article>\n            </Paper>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <div style={contentStyle}>\n                    {this.props.post ? this._renderPost() : this._renderProgress()}\n                </div>\n                <Divider />\n                <Paper zDepth={0} style={paperStyle}>\n                    <footer>Copyright {getFullYear()} Acme Corp.</footer>\n                </Paper>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}