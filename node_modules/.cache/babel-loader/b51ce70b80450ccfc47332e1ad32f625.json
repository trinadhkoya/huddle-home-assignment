{"ast":null,"code":"import { connect } from 'react-redux';\nimport { find } from 'lodash';\nimport { fetchPost } from '../redux/actions';\nimport Post from './Post';\n\nconst mapStateToProps = (state, ownProps) => {\n  const _ownProps$match$param = ownProps.match.params,\n        id = _ownProps$match$param.id,\n        slug = _ownProps$match$param.slug;\n  const post = find(state.posts.items, {\n    id\n  });\n  return {\n    id,\n    post,\n    slug\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPost: (id, slug) => dispatch(fetchPost(id, slug))\n});\n\nconst wrapper = connect(mapStateToProps, mapDispatchToProps);\nconst PostContainer = wrapper(Post);\nexport default PostContainer;","map":{"version":3,"sources":["/Users/trinadhkoya/WebstormProjects/huddle-home-assignment/src/components/PostContainer.js"],"names":["connect","find","fetchPost","Post","mapStateToProps","state","ownProps","match","params","id","slug","post","posts","items","mapDispatchToProps","dispatch","wrapper","PostContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAAA,gCACGA,QADH,CACjCC,KADiC,CACxBC,MADwB;AAAA,QACdC,EADc,yBACdA,EADc;AAAA,QACVC,IADU,yBACVA,IADU;AAEzC,QAAMC,IAAI,GAAGV,IAAI,CAACI,KAAK,CAACO,KAAN,CAAYC,KAAb,EAAoB;AAAEJ,IAAAA;AAAF,GAApB,CAAjB;AACA,SAAO;AAAEA,IAAAA,EAAF;AAAME,IAAAA,IAAN;AAAYD,IAAAA;AAAZ,GAAP;AACH,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,SAAS,EAAE,CAACO,EAAD,EAAKC,IAAL,KAAcK,QAAQ,CAACb,SAAS,CAACO,EAAD,EAAKC,IAAL,CAAV;AADG,CAAL,CAAnC;;AAIA,MAAMM,OAAO,GAAGhB,OAAO,CAACI,eAAD,EAAkBU,kBAAlB,CAAvB;AACA,MAAMG,aAAa,GAAGD,OAAO,CAACb,IAAD,CAA7B;AACA,eAAec,aAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { find } from 'lodash';\nimport { fetchPost } from '../redux/actions';\n\nimport Post from './Post';\n\nconst mapStateToProps = (state, ownProps) => {\n    const { match: { params: { id, slug } } } = ownProps;\n    const post = find(state.posts.items, { id });\n    return { id, post, slug };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    fetchPost: (id, slug) => dispatch(fetchPost(id, slug)),\n});\n\nconst wrapper = connect(mapStateToProps, mapDispatchToProps);\nconst PostContainer = wrapper(Post);\nexport default PostContainer;\n"]},"metadata":{},"sourceType":"module"}